// Описание класса Node.

#pragma once

#include "stdafx.h"

#define T 3 // минимальная степень B-дерва(задано в условии, можно изменять по желанию)

class Node // Класс реализующий узлы в В-дереве; Для реализации B-дерева подразумевается длина массива subTree на 1 больше длины массива keys.
{
	Node* parent = NULL;// Указатель на родительский узел; у корневого узла подразумевается NULL.
	std::vector<Node*> subTree; // Динамический массив содержащий указатели на поддеревья; Поддерево может быть узлом либо листом(у листа длина массива 0).
	std::vector<int> keys; // Динамический массив содержащий УПОРЯДОЧЕННЫЕ ПО УБЫВАНИЮ целочисленные ключи.
	
	void divide(); // Метод разделяющий узел на 2 новых.
	Node* balance(); //

public:
	bool addKey(int key); // Добавление ключа с возвращением результата true - успех / false - ключ уже существует.
	void remove(int key); // Удаление ключа если он существует.
	bool search(int key); // Поиск ключа.
	void output(std::ofstream &fout, Node* node); // Вывод дерева в файл с расширением .gv.
};
